x-ollama: &service-ollama
  image: ollama/ollama:latest
  container_name: ollama
  restart: unless-stopped
  ports:
    - 11434:11434
  volumes:
    - ollama_storage:/root/.ollama

x-init-ollama: &init-ollama
  image: ollama/ollama:latest
  container_name: ollama-pull-llama
  volumes:
    - ollama_storage:/root/.ollama
  entrypoint: /bin/sh
  command:
    - "-c"
    - "sleep 3; OLLAMA_HOST=ollama:11434 ollama pull llama3.2"

services:
  agent_planner:
    image: caramba
    command: |
      /app/main serve agent \ 
        --name agent.planner \
        --subscriptions topic.tasks \
        --tools tool.system \
        --initial-message example
    depends_on:
      - redis
      - neo4j
      - qdrant
      - minio
    environment:
      - STAGE=dev

  minio:
    image: minio/minio
    container_name: minio
    env_file:
      - .env
    ports:
      - "9000:9000"
      - "9001:9001"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - MINIO_ROOT_USER=${MINIO_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD}
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - QDRANT__SERVICE__API_KEY=${QDRANT_API_KEY}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 6333:6333
      - 6334:6334
    volumes:
      - qdrant_storage:/qdrant/storage

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  neo4j:
    image: neo4j:latest
    healthcheck:
      test: wget http://localhost:7687 || exit 1
      interval: 1s
      timeout: 10s
      retries: 20
      start_period: 3s
    ports:
      - "7474:7474"
      - "7687:7687"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - NEO4J_AUTH=neo4j/securepassword
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_PLUGINS=["apoc"]
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_plugins:/plugins

  ollama-cpu:
    profiles: ["cpu"]
    <<: *service-ollama

  ollama-gpu:
    profiles: ["gpu-nvidia"]
    <<: *service-ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  ollama-pull-llama-cpu:
    profiles: ["cpu"]
    <<: *init-ollama
    depends_on:
      - ollama-cpu

  ollama-pull-llama-gpu:
    profiles: ["gpu-nvidia"]
    <<: *init-ollama
    depends_on:
      - ollama-gpu

volumes:
  ollama_storage:
  minio_data:
  qdrant_storage:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
